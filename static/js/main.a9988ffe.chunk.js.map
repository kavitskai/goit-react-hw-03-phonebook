{"version":3,"sources":["App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","App/App.jsx","index.js"],"names":["Main","styled","main","Section","section","MainTitle","h1","Form","form","Label","label","Input","input","Button","button","ContactForm","state","contacts","name","number","nameId","uuidv4","telId","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","htmlFor","id","type","onChange","pattern","title","placeholder","required","Component","List","ul","Item","li","ContactList","onDelete","map","onClick","Filter","filterValue","SectionTitle","h2","Title","App","filter","addContact","find","contact","toLowerCase","alert","newContact","checkContact","includes","filterContact","e","removeContact","contactId","prev","savedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9988ffe.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: space-between;\r\ntext-align: center;\r\nmargin: 20px auto;\r\npadding: 20px;\r\nbackground-color: #fff;\r\nwidth: 900px;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  /* padding: 40px 0; */\r\n`;\r\nexport const MainTitle = styled.h1`\r\n  width: 900px;\r\n  text-align: center;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  color: #04125e;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n`;\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nwidth: 400px;\r\nmargin-bottom: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nheight: 40px;\r\nborder: 1px solid #000000;\r\nborder-radius: 4px;\r\nfont-size: 16px;\r\nmargin-top: 10px;\r\n&:focus {\r\n    outline: none;\r\n    border: 1px solid #04125e;\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  min-width: 100px;\r\n  height: 30px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  background-color: #9ccdf5;\r\n  border: none;\r\n`;","import { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\r\n\r\nexport class ContactForm extends Component {\r\n    state = {\r\n        contacts: [],\r\n        name: \"\",\r\n        number: \"\"\r\n    };\r\n\r\n    nameId = uuidv4();\r\n    telId = uuidv4();\r\n\r\n    handleChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n    };\r\n    \r\n    handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n   };\r\n\r\n   resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n   };\r\n    \r\n   render() {\r\n       const { name, number } = this.state;\r\n       \r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label htmlFor={this.nameId}> Name\r\n          <Input\r\n            id={this.nameId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            placeholder=\"Enter contact name\"\r\n            required\r\n          />\r\n        </Label>\r\n\r\n        <Label htmlFor={this.telId}> Phone Number\r\n          <Input\r\n            id={this.telId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            placeholder=\"Enter phone number\"\r\n            required\r\n          />\r\n        </Label>\r\n\r\n        <Button type=\"submit\">\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\ndisplay: flex;\r\nflex-direction: column;\r\nwidth: 800px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\nmargin-bottom: 25px;\r\nfont-size: 24px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  min-width: 100px;\r\n  height: 30px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  background-color: #9ccdf5;\r\n  border: none;\r\n \r\n`;","import PropTypes from \"prop-types\";\r\nimport { List, Item, Button } from \"./ContactList.styled\";\r\n\r\nexport function ContactList({contacts, onDelete}) {\r\n    return (\r\n        <List>\r\n            {contacts.map(({id, name, number}) => (\r\n                <Item key={id}>\r\n                    {name}: {number}\r\n                    <Button\r\n                        onClick={() => onDelete(id)}>\r\n                        Delete\r\n                    </Button>\r\n                </Item>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n    })),\r\n   \r\n}","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Input = styled.input`\r\n  border: 1px solid #000000;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  height: 40px;\r\n  margin-top: 10px;\r\n  &:focus {\r\n      outline: none;\r\n      border: 1px solid #04125e;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  margin-bottom: 20px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Label, Input } from \"./Filter.styled\";\r\n\r\nexport function Filter({ filterValue, onChange }) {\r\n    return (\r\n        <Label>Find contacts by name\r\n            <Input\r\n                type=\"text\"\r\n                filterValue={filterValue}\r\n                onChange={onChange}\r\n                placeholder=\"Enter contact name\"/>\r\n        </Label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    filterValue: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const SectionTitle = styled.h2`\r\n  text-align: center;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  color: #04125e;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { SectionTitle } from \"./Title.styled\";\r\n\r\nexport function Title({ title }) {\r\n    return (\r\n         <SectionTitle>{title}</SectionTitle>\r\n    )\r\n}\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport contacts from \"../data/contacts.json\";\r\nimport { Main, Section, MainTitle } from './App.styled';\r\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\r\nimport { ContactList } from \"../components/ContactList/ContactList\";\r\nimport { Filter } from \"../components/Filter/Filter\";\r\nimport { Title } from \"../components/Title/Title\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts,\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n  if (this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\r\n      alert(`${name} is already in contacts`);\r\n      return\r\n    }\r\n  const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    }\r\n  this.setState(({contacts}) => (\r\n    {\r\n      contacts: [newContact, ...contacts]\r\n    }))\r\n  };\r\n\r\n  checkContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n  };\r\n\r\n  filterContact = (e) => {\r\n    this.setState({ filter: e.currentTarget.value })\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prev) => ({\r\n      contacts: prev.contacts.filter(contact => contact.id !== contactId)\r\n    }))\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (savedContacts) {\r\n      this.setState({ contacts: savedContacts })\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Main>\r\n        <MainTitle>Phonebook</MainTitle>\r\n        <Section>\r\n          <Title title={\"Add contact\"} />\r\n          <ContactForm\r\n            onSubmit={this.addContact} />   \r\n        </Section>\r\n        <Section>\r\n          <Title title=\"Search contact\" />\r\n          <Filter\r\n            filterValue={this.state.filter}\r\n            onChange={this.filterContact} />\r\n        </Section>\r\n        <Section>\r\n          <Title title=\"Contacts list\"/>\r\n          <ContactList\r\n            contacts={this.checkContact()}\r\n            onDelete={this.removeContact} />\r\n        </Section>\r\n      </Main>\r\n    )\r\n  };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}